// "use client"; // 이 문장 쓰면 layout.js는 Client Component가 됨
import Link from "next/link";
import "./globals.css";
import { Control } from "./Control";
// import { useEffect, useState } from "react";

export const metadata = {
  // meta 이부분은 서버컴포넌트에서만 사용됨
  title: "Web tutorials",
  description: "Generated by Steve",
};

export default async function RootLayout({ children }) {
  // const [topics, setTopics] = useState([]);
  // useEffect(() => {
  // fetch("http://localhost:9999/topics")
  //   .then((resp) => resp.json())
  //   .then((result) => {
  //     setTopics(result);
  //   });
  // }, []);
  // 위처럼 비동기적으로 코드를 작성하지않고 아래처럼 작성
  const resp = await fetch(process.env.NEXT_PUBLIC_API_URL + "topics", {
    cache: "no-store",
  }); // 1. 얘가 실행이 끝날때까지 await
  const topics = await resp.json(); // 2. json으로 바꾸라는 명령이 전달

  return (
    <html>
      <body>
        <h1>
          <Link href="/">WEB</Link>
        </h1>
        <ol>
          {topics.map((topic) => {
            // 3. 동적으로 생성
            return (
              <li key={topic.id}>
                <Link href={`/read/${topic.id}`}>{topic.title}</Link>
              </li>
            );
          })}
          {/*  4. 그렇게 만든 결과를 서버쪽에 .next폴더에 나름대로의 방법으로 저장해놓고 정적인 내용만 클라이언트로 전송함
          이과정에서 자바스크립트 코드는 뺴고 전송*/}
        </ol>
        {children}
        <Control />
      </body>
    </html>
  );
}
